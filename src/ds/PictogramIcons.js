import React from "react";
import { motion } from "framer-motion";
import { P } from "../prototypes/drawing-02/tiles/text/TextSyles";

export const PictogramIcon = props => {
	const { name = "PersonMasculine", color = "rgba(255,255,255,0.5)", onTap = undefined, size = 72 } = props;
	const Drawing = IconMap[name] ? IconMap[name] : null;
	return (
		<Drawing
			style={{
				display: "block",
				fill: color,
				transition: "fill 0.2s ease-in-out",
				width: size,
			}}
			onTap={onTap}
		/>
	);
};

const PersonMasculine = props => {
	return (
		<motion.svg viewBox="0 0 21 52" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M19.4891 32H18.3941V32C17.8805 32.0001 17.4504 31.611 17.399 31.1L16.3126 20.2352L15.6937 24.5678V24.5678C15.5576 25.5206 15.5077 26.4837 15.5447 27.4454L16.4492 50.9616V50.9616C16.4704 51.5135 16.0402 51.978 15.4883 51.9993C15.4756 51.9998 15.4628 52 15.45 52H13.3942V52C12.8804 52 12.4502 51.6107 12.3991 51.0995L10.5 32L8.601 51.1V51.1C8.54964 51.611 8.11956 52 7.606 52H5.55V52C4.99771 52 4.54998 51.5523 4.54996 51C4.54995 50.9872 4.5502 50.9744 4.55069 50.9616L5.45519 27.4454V27.4454C5.49217 26.4837 5.44231 25.5206 5.30619 24.5678L4.68729 20.2352L3.60119 31.1V31.1C3.54983 31.6111 3.11963 32.0001 2.60599 32H1.51129V32C0.959006 32 0.511292 31.5523 0.511292 31V17V17C0.511291 14.2386 2.74987 12 5.51129 12H15.4891H15.4891C18.2505 12 20.4891 14.2386 20.4891 17V31V31C20.4891 31.5523 20.0414 32 19.4891 32L19.4891 32ZM10.5 10V10C7.73858 10 5.5 7.76142 5.5 5C5.5 2.23858 7.73858 0 10.5 0C13.2614 1.20706e-07 15.5 2.23858 15.5 5V5C15.5 7.76142 13.2614 10 10.5 10V10Z"
			/>
		</motion.svg>
	);
};

const PersonFeminine = props => {
	return (
		<motion.svg viewBox="0 0 25 52" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M23.4851 30H22.5672V30C22.0447 30.0029 21.573 29.6872 21.3765 29.203L17.8413 20.3075L16.5279 23.521V23.521C16.4277 23.8153 16.4729 24.1397 16.6498 24.3954V24.3954C19.1163 28.1216 20.4524 32.4817 20.497 36.95V36.95C20.517 37.5096 20.0795 37.9794 19.5199 37.9994C19.5108 37.9997 19.5018 37.9999 19.4927 38H15.5615L14.6071 51.0713V51.0713C14.5631 51.6001 14.1184 52.0052 13.5878 52H11.4123V52C10.8818 52.0051 10.4372 51.5999 10.3931 51.0712L9.4389 38H5.50751V38C4.94768 37.9951 4.49781 37.5373 4.5027 36.9775C4.50278 36.9683 4.50298 36.9592 4.50331 36.95V36.9501C4.54775 32.4818 5.88365 28.1217 8.34996 24.3955V24.3955C8.52694 24.1398 8.57224 23.8154 8.47206 23.5211L7.15846 20.3076L3.62361 29.203H3.62361C3.42727 29.6871 2.95594 30.0027 2.43361 30H1.51501V30C0.959575 30.0079 0.502925 29.564 0.495065 29.0086C0.493992 28.9328 0.501489 28.8571 0.517412 28.783L3.26191 16.6983V16.6983C3.91737 13.9279 6.40093 11.9786 9.24771 12H15.7524V12C18.5992 11.9785 21.0828 13.928 21.7382 16.6984L24.483 28.783V28.783C24.5996 29.3262 24.2537 29.8611 23.7105 29.9777C23.6365 29.9936 23.5608 30.0011 23.4851 30L23.4851 30ZM12.5 10V10C9.73859 10 7.50001 7.76142 7.50001 5C7.50001 2.23858 9.73859 0 12.5 0C15.2614 1.20706e-07 17.5 2.23858 17.5 5V5C17.5 7.76142 15.2614 10 12.5 10V10Z"
			/>
		</motion.svg>
	);
};

const Child = props => {
	return (
		<motion.svg viewBox="0 0 37 48" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M15.047 16.0243V16.0243C14.0619 16.0241 13.1118 15.6586 12.3806 14.9984L4.0457 7.3891V7.3891C3.45526 6.85584 2.55023 6.87977 1.9888 7.4435L0.9672 8.4678V8.4678C0.420291 9.01652 0.380656 9.89126 0.875699 10.4872L10.5277 22.02L11.2726 26.3127V26.3127C11.4608 27.4446 11.5269 28.5935 11.4696 29.7395L10.5128 46.4265V46.4265C10.4707 47.2523 11.1059 47.9559 11.9318 47.998C11.9564 47.9993 11.9811 48 12.0058 48H13.9873V48C14.8196 47.999 15.5353 47.4105 15.6973 46.5942L18.4925 33.048L21.288 46.5932V46.5932C21.4502 47.4104 22.1669 47.9993 23 48H24.9835V48C25.8112 47.9988 26.4811 47.3269 26.48 46.4992C26.4799 46.4745 26.4793 46.4497 26.478 46.425L25.5202 29.725L25.5202 29.725C25.4629 28.5781 25.529 27.4284 25.7174 26.2957L26.4627 22L36.1242 10.4585V10.4585C36.6195 9.86213 36.5799 8.98684 36.0327 8.43769L35.01 7.41249V7.41249C34.4478 6.84841 33.542 6.82452 32.9509 7.35819L24.6079 14.9732V14.9732C23.876 15.6339 22.925 15.9997 21.939 16L15.047 16.0243ZM18.4826 14H18.4826C22.3486 14.0096 25.4904 10.8834 25.5 7.01742C25.5096 3.15144 22.3834 0.00964735 18.5174 3.73536e-05C14.6514 -0.00957225 11.5096 3.11664 11.5 6.98262C11.5 6.98841 11.5 6.9942 11.5 7V7.0001C11.4952 10.8612 14.6214 13.9952 18.4825 14C18.4826 14 18.4826 14 18.4827 14H18.4826Z"
			/>
		</motion.svg>
	);
};

const Baby = props => {
	return (
		<motion.svg viewBox="0 0 35 48" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M34.1847 28.4119L33.4347 29.4119C32.9723 30.0289 32.1172 30.1945 31.4579 29.7947L25.4879 26.1747V29.012C25.4879 29.5641 25.0405 30.0117 24.4884 30.012H10.4953C9.94302 30.012 9.4953 29.5643 9.4953 29.012V26.1745L3.5253 29.7945C2.86605 30.1943 2.01104 30.0287 1.5487 29.4117L0.798701 28.4117C0.340633 27.8005 0.414582 26.9428 0.9705 26.4191L8.7452 19.0974C9.48671 18.3992 10.4667 18.0103 11.4852 18.0101H23.4977C24.5162 18.0103 25.4962 18.3992 26.2377 19.0974L34.0126 26.4191C34.5686 26.9428 34.6427 27.8006 34.1847 28.4119ZM17.5 16C13.0817 16 9.5 12.4183 9.5 8C9.5 3.58172 13.0817 0 17.5 0C21.9183 1.93129e-07 25.5 3.58172 25.5 8C25.5 12.4183 21.9183 16 17.5 16ZM8.78 33.463C9.062 33.0114 9.65674 32.8738 10.1084 33.1558C10.1722 33.1956 10.2311 33.2428 10.2839 33.2963L14.1989 37.1906C14.5259 37.5224 14.5764 38.0377 14.32 38.4267L12.731 40.959L15.21 44.17C15.6444 44.7561 15.5869 45.5713 15.0746 46.0906L13.62 47.56C13.0599 48.1281 12.1454 48.1345 11.5774 47.5745C11.5725 47.5697 11.5677 47.5649 11.5629 47.56L6.6351 42.5821C5.3488 41.2771 5.12933 39.2586 6.1051 37.7076L8.78 33.463ZM22.2692 40.959L20.68 38.4267C20.4237 38.0377 20.4742 37.5225 20.8011 37.1906L24.7161 33.2963C25.0901 32.9174 25.7004 32.9134 26.0792 33.2874C26.1328 33.3402 26.18 33.3992 26.2198 33.463L28.8942 37.708C29.8702 39.2589 29.6507 41.2776 28.3642 42.5825L23.4367 47.56C22.8767 48.128 21.9622 48.1345 21.3942 47.5745C21.3893 47.5697 21.3845 47.5649 21.3797 47.56L19.9251 46.091C19.4129 45.5714 19.3556 44.7562 19.79 44.17L22.2692 40.959Z"
			/>
		</motion.svg>
	);
};

const Heart = props => {
	return (
		<motion.svg viewBox="0 0 48 44" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M12.5453 0V0C17.5599 0.0432308 22.066 3.07171 24 7.6986L24 7.6986C25.9341 3.07169 30.4402 0.0432319 35.4549 1.90735e-06V1.90735e-06C42.5012 0.120329 48.117 5.92794 48.0006 12.9743C48.0006 29.6471 28.0266 44 24 44C19.9734 44 -1.99396e-06 29.6471 -1.99396e-06 12.9743V12.9743C-0.116409 5.92807 5.49914 0.120496 12.5453 -3.8147e-06L12.5453 0Z"
			/>
		</motion.svg>
	);
};

const Star = props => {
	return (
		<motion.svg viewBox="0 0 51 48" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M36.4967 29.8971L41.4022 45.5108V45.5108C41.7371 46.4994 41.2071 47.5724 40.2184 47.9072C39.6371 48.1041 38.9963 48.0065 38.5 47.6453L25.4995 37.8467L12.5252 47.64V47.64C11.6782 48.2501 10.497 48.058 9.88699 47.211C9.52925 46.7143 9.43418 46.0752 9.6319 45.4959L14.5019 29.9198L1.33 20.4607H1.33C0.471761 19.8451 0.275053 18.6503 0.890653 17.7921C1.2444 17.2989 1.81124 17.0029 2.4181 16.9945H18.6447L23.708 1.3322V1.3322C24.0158 0.342833 25.0674 -0.209674 26.0568 0.0981458C26.646 0.281487 27.1075 0.742913 27.2908 1.3322L32.3541 16.9945H48.6341V16.9945C49.6902 17.0092 50.5344 17.8773 50.5197 18.9333C50.5112 19.5408 50.2147 20.1081 49.7207 20.4617L36.4967 29.8971Z"
			/>
		</motion.svg>
	);
};

const Fire = props => {
	return (
		<motion.svg viewBox="0 0 41 51" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M26.7666 48.65V48.65C28.9563 46.7967 30.5911 44.3741 31.4904 41.65V41.65C31.5742 41.3778 31.4215 41.0893 31.1493 41.0055C31.1015 40.9908 31.0518 40.9831 31.0017 40.9827H31.0017C28.7029 41.026 26.4182 41.353 24.1995 41.9562V41.9562C23.9329 42.0585 23.6339 41.9253 23.5316 41.6588C23.4842 41.5353 23.4859 41.3984 23.5364 41.2762V41.2762C24.3082 38.9319 24.6383 36.4647 24.51 34C24.51 28.6991 21.2911 24.5955 20.1585 23.187V23.187C19.9902 22.9718 19.6794 22.9338 19.4642 23.1021C19.3873 23.1622 19.3299 23.2437 19.2993 23.3364C17.79 28.1557 11.5102 35.0682 11.5102 41.995C11.5102 46.1586 14.2752 47.9662 14.4789 48.9319C14.6466 49.7272 14.2419 50.1673 13.4812 49.9277C8.41729 48.3334 0.509995 41.05 0.509995 32.0009C0.509995 15.5609 16.51 12.2802 16.51 4.0183V4.0183C16.4084 2.96171 16.084 1.93864 15.5583 1.0165V1.0165C15.4279 0.616535 15.6465 0.186623 16.0465 0.056269C16.1896 0.00962132 16.3434 0.00643211 16.4883 0.0471042C21.631 1.4322 33.5102 8.6133 33.5102 23.0065V23.0065C33.4156 26.1038 32.737 29.1554 31.5102 32.0009C31.5102 32.0009 34.8725 31.4169 39.4302 30.9975V30.9975C40.0108 30.9793 40.4962 31.4351 40.5144 32.0157C40.516 32.0672 40.5138 32.1188 40.5079 32.17C40.5079 39.11 35.0854 47.1113 27.3705 49.9939C26.6706 50.2552 26.2029 49.1576 26.7666 48.65V48.65Z"
			/>
		</motion.svg>
	);
};

const Water = props => {
	return (
		<motion.svg viewBox="0 0 37 51" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M18.51 50.0177H18.51C8.56929 50.0181 0.510395 41.9599 0.509995 32.0192C0.509995 20.2863 13.4954 4.6671 17.4076 0.4907V0.4907C17.9792 -0.118166 18.9362 -0.148337 19.5451 0.423312C19.5683 0.445061 19.5907 0.467535 19.6125 0.4907C23.5253 4.6671 36.51 20.2863 36.51 32.0192V32.0185C36.51 41.9592 28.4515 50.0177 18.5108 50.0177C18.5108 50.0177 18.5107 50.0177 18.5107 50.0177H18.51ZM15.4891 9.7169L15.4891 9.7169C12.6304 16.4836 10.9466 23.6882 10.51 31.0209V31.0209C10.4964 31.5675 10.0566 32.0073 9.50999 32.0209H6.50999V32.0209C5.97803 32.0412 5.53032 31.6265 5.50999 31.0945C5.50906 31.07 5.50906 31.0454 5.50999 31.0209C5.91689 24.4394 10.5221 14.7593 14.5586 9.2601C14.9251 8.76141 15.7393 9.15701 15.4891 9.71691L15.4891 9.7169Z"
			/>
		</motion.svg>
	);
};

const EmojiHappy = props => {
	return (
		<motion.svg viewBox="0 0 45 44" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M22.4989 44V44C10.3487 44 0.498899 34.1502 0.498899 22C0.4989 9.84977 10.3487 0 22.4989 0C34.6491 5.31105e-07 44.4989 9.84977 44.4989 22V22C44.4989 34.1502 34.6491 44 22.4989 44V44ZM15.1666 14.6667C13.5278 14.6667 12.4161 16.3855 12.4161 18.7815C12.4157 21.2208 13.6991 22 15.1666 22C16.6341 22 17.9166 21.2208 17.9166 18.7815C17.9158 16.3855 16.8049 14.6667 15.1666 14.6667ZM29.8332 14.6667C28.1944 14.6667 27.0832 16.3855 27.0832 18.7815C27.0832 21.2208 28.3666 22 29.8332 22C31.2999 22 32.5832 21.2208 32.5832 18.7815C32.5824 16.3855 31.4716 14.6667 29.8332 14.6667ZM32.8124 27.5C31.5408 27.5 29.0335 31.1667 22.4999 31.1667C15.9664 31.1667 13.4591 27.5 12.1874 27.5V27.5C11.834 27.4737 11.5262 27.7389 11.4999 28.0923C11.4976 28.124 11.4976 28.1558 11.4999 28.1875C11.4999 29.3715 15.6241 34.8333 22.4999 34.8333C29.3757 34.8333 33.4999 29.3716 33.4999 28.1875V28.1875C33.5262 27.8341 33.2611 27.5263 32.9077 27.4999C32.8757 27.4976 32.8435 27.4976 32.8115 27.5H32.8124Z"
			/>
		</motion.svg>
	);
};

const EmojiDisappointed = props => {
	return (
		<motion.svg viewBox="0 0 45 44" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M22.5 44H22.5C34.6502 44 44.5 34.1502 44.5 22C44.5 9.84977 34.6502 0 22.5 0C10.3498 -5.31105e-07 0.5 9.84977 0.5 22V22C0.499998 34.1502 10.3498 44 22.5 44C22.5 44 22.5 44 22.5 44V44ZM29.8333 14.6667C31.4721 14.6667 32.5833 16.3855 32.5833 18.7815C32.5833 21.2208 31.3 22 29.8333 22C28.3667 22 27.0833 21.2208 27.0833 18.7815C27.0833 16.3855 28.1942 14.6667 29.8333 14.6667ZM15.1667 14.6667C16.8055 14.6667 17.9167 16.3855 17.9167 18.7815C17.9167 21.2208 16.6333 22 15.1667 22C13.7 22 12.4167 21.2208 12.4167 18.7815C12.4167 16.3855 13.5273 14.6667 15.1667 14.6667ZM23.4167 27.5C27.9708 27.5 31.6667 29.8594 31.6667 31.1667V31.1667C31.6603 31.6703 31.2536 32.077 30.75 32.0833C29.8975 32.0833 28.5395 31.1667 23.4167 31.1667C16.9827 31.1667 13.5808 34.8333 12.4167 34.8333V34.8333C11.9206 34.8436 11.5102 34.4497 11.5 33.9537C11.4997 33.9414 11.4997 33.929 11.5 33.9167C11.5 32.1408 16.7733 27.5 23.4167 27.5V27.5Z"
			/>
		</motion.svg>
	);
};

const ThumbsUp = props => {
	return (
		<motion.svg viewBox="0 0 36 41" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M1.67438 20.0209H5.03389V20.0209C6.06892 20.0211 7.04532 19.5405 7.67658 18.7203L14.3198 10.0871V10.0871C14.7681 9.50448 15.0113 8.78995 15.0114 8.05475V1.68823V1.68823C14.998 0.781221 15.7223 0.0350383 16.6293 0.0215886C16.6457 0.0213454 16.6622 0.021348 16.6786 0.0215961C18.8173 0.0215961 21.6798 2.52154 21.6798 7.52143V7.52142C21.7883 10.4389 21.3224 13.3492 20.3086 16.087V16.087C20.209 16.2966 20.2982 16.5473 20.5078 16.6469C20.562 16.6727 20.6211 16.6865 20.681 16.6876H31.5462V16.6876C33.229 16.659 34.6835 17.8567 34.9784 19.5137V19.5137C35.1907 20.9028 34.5042 22.2747 33.2651 22.9374V22.9374C34.8776 23.7981 35.487 25.803 34.6263 27.4154C34.2336 28.1512 33.5775 28.7116 32.7894 28.9844V28.9844C33.3955 29.4123 33.8384 30.0333 34.0455 30.7457V30.7457C34.2604 31.5516 34.1651 32.4089 33.7783 33.1478V33.1478C33.3326 34.1974 32.3303 34.9034 31.192 34.9699V34.9699C31.5501 35.5502 31.7187 36.2277 31.6745 36.9082V36.9082C31.4878 38.704 29.956 40.0571 28.1509 40.0207H15.715V40.0207C13.0821 40.0208 10.508 39.2416 8.31707 37.7814L7.51559 37.2473V37.2473C6.96788 36.8822 6.32441 36.6875 5.66621 36.6875H1.67464V36.6875C0.754183 36.6878 0.00778311 35.9418 0.00750812 35.0214C0.00750807 35.0212 0.00750812 35.0211 0.00750812 35.0209V21.6879L0.00750732 21.6875C0.00750719 20.7671 0.753682 20.0209 1.67414 20.0209C1.67433 20.0209 1.67453 20.0209 1.67472 20.0209L1.67438 20.0209Z"
			/>
		</motion.svg>
	);
};

const ThumbsDown = props => {
	return (
		<motion.svg viewBox="0 0 36 41" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M1.6745 3.35468H5.66604H5.66604C6.32423 3.35472 6.96772 3.15993 7.51539 2.79486L8.31686 2.26072L8.31687 2.26071C10.5078 0.800571 13.0818 0.0214391 15.7147 0.0214557H28.1507V0.0214557C29.9559 -0.0149897 31.4877 1.33816 31.6743 3.13402V3.13402C31.7185 3.8145 31.5499 4.49188 31.1918 5.07221V5.07221C32.33 5.13872 33.3323 5.84457 33.7783 6.8939V6.89389C34.1649 7.63294 34.2601 8.49015 34.045 9.29598V9.29598C33.8379 10.0084 33.395 10.6294 32.7888 11.0573V11.0573C34.516 11.655 35.4316 13.5397 34.8339 15.2668C34.5611 16.0552 34.0005 16.7115 33.2645 17.1042V17.1042C34.5039 17.7669 35.1906 19.1392 34.9781 20.5284V20.5284C34.6833 22.1854 33.2289 23.3831 31.5461 23.3544H20.681V23.3544C20.4489 23.3584 20.2641 23.5497 20.2681 23.7817C20.2691 23.8418 20.283 23.9009 20.3088 23.9551V23.9551C21.3225 26.6929 21.7882 29.6033 21.6796 32.5208C21.6796 37.5206 18.8168 40.0205 16.6783 40.0205V40.0205C15.7712 40.0343 15.0248 39.3101 15.0111 38.4031C15.0108 38.3867 15.0108 38.3703 15.0111 38.3539V31.9875V31.9875C15.0111 31.2523 14.7679 30.5378 14.3195 29.9552L7.67667 21.3221V21.3221C7.04533 20.5018 6.06885 20.0211 5.03368 20.0212H1.6745V20.0212C0.754055 20.0212 0.00788879 19.275 0.00788879 18.3546V18.3546V5.02167V5.02129C0.00788865 4.10084 0.754055 3.35467 1.6745 3.35467C1.67463 3.35467 1.67476 3.35467 1.67488 3.35467L1.6745 3.35468Z"
			/>
		</motion.svg>
	);
};

const Bicycle = props => {
	return (
		<motion.svg viewBox="0 0 51 32" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M41.5018 31.9983V31.9983C36.3932 32.0052 32.2463 27.8695 32.2393 22.7609C32.2356 20.0982 33.3797 17.563 35.3787 15.804L33.8483 13.2535L26.904 23.6697V23.6697C26.5918 24.1383 26.0659 24.4198 25.5028 24.4197H18.6056V24.4197C17.6756 29.45 12.8438 32.774 7.81348 31.844C2.78315 30.914 -0.540828 26.0822 0.389177 21.0518C1.31918 16.0215 6.15099 12.6975 11.1813 13.6275C11.8589 13.7528 12.5203 13.9533 13.1534 14.2252L15.9321 10.0571L13.9398 6.73642H13.0388V6.73642C12.082 6.73638 11.2073 6.19577 10.7794 5.33996L10.4029 4.58683V4.58683C10.1949 4.17087 10.3635 3.66507 10.7795 3.4571C10.8964 3.39865 11.0253 3.36821 11.156 3.36821H18.5474V3.36821C19.5043 3.36818 20.379 3.9088 20.8069 4.76467L21.1835 5.5178V5.5178C21.3915 5.93376 21.2229 6.43955 20.8069 6.64752C20.69 6.70598 20.5611 6.73641 20.4304 6.73642H17.867L18.8775 8.42052H30.949L27.9176 3.36821H23.9923V3.36821C23.0355 3.36819 22.1608 2.82761 21.7329 1.97183L21.3563 1.2187V1.2187C21.1483 0.802763 21.3168 0.296946 21.7328 0.0889339C21.8497 0.0304464 21.9787 -2.526e-06 22.1094 1.57173e-10H28.8711V1.57173e-10C29.4626 0.000118507 30.0107 0.310551 30.315 0.817801L38.2652 14.068H38.2652C43.0547 12.278 48.3884 14.7094 50.1784 19.4989C51.9685 24.2883 49.537 29.622 44.7475 31.4121C43.7094 31.8001 42.6101 31.9985 41.5019 31.998L41.5018 31.9983ZM9.50385 16.8413V16.8413C6.24848 16.8399 3.60835 19.4778 3.60695 22.7331C3.60556 25.9885 6.24342 28.6286 9.4988 28.63C12.1064 28.6312 14.4049 26.9187 15.15 24.4198H9.50377V24.4198C8.57367 24.42 7.81952 23.6661 7.81933 22.736C7.81926 22.4032 7.9178 22.0778 8.10251 21.801L11.2357 17.1017V17.1017C10.6747 16.9288 10.0909 16.841 9.50377 16.8413H9.50385ZM14.0364 18.9729L12.6505 21.0517H15.1499V21.0517C14.9228 20.2907 14.544 19.5836 14.0364 18.9729H14.0364ZM17.8495 13.2535L15.9519 16.0996L15.952 16.0996C17.3288 17.4351 18.2562 19.1657 18.6057 21.0517H22.5287L17.8495 13.2535ZM20.8987 11.7889L25.5779 19.5871L30.777 11.789L20.8987 11.7889ZM41.5018 16.8412V16.8412C41.0095 16.8432 40.5194 16.907 40.0431 17.0314L42.9457 21.8689V21.8689C43.4244 22.6664 43.1659 23.701 42.3683 24.1797C41.5708 24.6584 40.5362 24.3999 40.0575 23.6023L37.1562 18.7667V18.7667C34.9689 21.1715 35.1452 24.8941 37.55 27.0814C39.9548 29.2687 43.6774 29.0924 45.8647 26.6876C48.052 24.2828 47.8756 20.5602 45.4708 18.3729C44.3849 17.3852 42.9691 16.8389 41.5012 16.8412H41.5018Z"
			/>
		</motion.svg>
	);
};

const Car = props => {
	return (
		<motion.svg viewBox="0 0 45 38" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M42.7638 18.9516V18.9516C42.1427 19.2622 41.7503 19.897 41.7503 20.5914V27.2501C41.7503 31.8504 35.2727 32.7502 22.5001 32.7502C9.72756 32.7502 3.24997 31.8504 3.24997 27.2501V20.5914V20.5915C3.24997 19.897 2.85764 19.2622 2.23655 18.9517L1.00665 18.3368V18.3368C0.69613 18.1815 0.499995 17.8641 0.5 17.5169V15.3333V15.3333C0.5 14.827 0.910409 14.4166 1.41667 14.4166H4.37267L7.37772 5.401V5.401C7.96151 3.63966 9.39632 2.29294 11.1911 1.82176C13.1856 1.29449 16.0099 0.666748 22.5 0.666748C28.9901 0.666748 31.8134 1.29485 33.8085 1.82176V1.82176C35.6035 2.29269 37.0385 3.63978 37.6218 5.40155L40.6271 14.4166H43.5833V14.4166C44.0896 14.4166 44.5 14.827 44.5 15.3333V17.5169V17.5168C44.5 17.864 44.3038 18.1814 43.9933 18.3367L42.7638 18.9516ZM6.91667 22.796V24.3503V24.3503C6.94032 25.4595 7.85697 26.3405 8.96626 26.3201H12.2007H12.2007C13.3099 26.3405 14.2266 25.4595 14.2502 24.3503V24.3503C14.246 23.5929 13.8046 22.9062 13.1173 22.5878L9.88339 21.0342V21.0342C9.59757 20.8961 9.28417 20.8245 8.96672 20.8248V20.8248C7.85701 20.8049 6.94028 21.6864 6.91667 22.796V22.796ZM36.1889 13.21L33.9996 6.56142V6.56142C33.8108 5.97663 33.3388 5.52715 32.7455 5.36709C31.3012 4.98089 28.8411 4.33308 22.5001 4.33308C16.1591 4.33308 13.6987 4.98089 12.2567 5.36663V5.36663C11.6621 5.52644 11.1889 5.97641 10.9994 6.56216L8.81097 13.2101V13.2101C8.64991 13.6891 8.90765 14.2079 9.38665 14.369C9.47796 14.3997 9.57356 14.4158 9.6699 14.4167H35.3298V14.4167C35.8351 14.4122 36.2411 13.9989 36.2366 13.4935C36.2358 13.3971 36.2197 13.3014 36.1889 13.21V13.21ZM38.0836 22.796V22.796C38.0602 21.6863 37.1435 20.8046 36.0336 20.8244V20.8244C35.7162 20.8241 35.4028 20.8957 35.117 21.0339L31.8829 22.5878V22.5878C31.1958 22.9062 30.7544 23.593 30.7502 24.3503V24.3503C30.7738 25.4595 31.6904 26.3405 32.7996 26.3201H36.034V26.3201C37.1433 26.3406 38.06 25.4595 38.0836 24.3503V22.796ZM10.8059 33.6941V33.6941C11.219 33.7881 11.5091 34.1596 11.5 34.5832V35.4999V35.4999C11.4989 36.5119 10.6787 37.3321 9.6667 37.3333H6V37.3333C4.98796 37.3321 4.16782 36.512 4.16665 35.4999V33.6666V33.6666C4.11857 33.2084 4.45103 32.798 4.90921 32.7499C4.96709 32.7438 5.02545 32.7438 5.08333 32.7499C5.51682 32.7502 8.22678 33.469 10.8059 33.6941V33.6941ZM39.9169 32.7499V32.7499C40.3751 32.7018 40.7855 33.0343 40.8336 33.4924C40.8397 33.5503 40.8397 33.6087 40.8336 33.6666V35.4999V35.4999C40.8324 36.5119 40.0123 37.332 39.0003 37.3332H35.3336V37.3332C34.3215 37.3321 33.5014 36.5119 33.5002 35.4999V34.5832V34.5832C33.4911 34.1596 33.7812 33.7881 34.1943 33.6941C36.773 33.469 39.4835 32.7502 39.9169 32.7502V32.7499Z"
			/>
		</motion.svg>
	);
};

const Airplane = props => {
	return (
		<motion.svg viewBox="0 0 45 48" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M27.1078 17.0678L31.7862 19.4073C31.9068 18.3113 32.2865 17.5324 33.5152 17.5324C35.4036 17.5324 35.3607 19.2467 35.3607 21.1947L43.6259 25.3271V25.3271C44.2512 25.6398 44.6461 26.2788 44.6461 26.9779V30.4483V30.4485C44.6461 30.9581 44.2329 31.3712 43.7233 31.3712C43.6545 31.3712 43.5859 31.3635 43.5188 31.3483L26.889 27.5687L26.889 27.5687C26.7175 32.7623 26.0458 37.9273 24.8831 42.9921L30.2485 45.9726V45.9726C30.7706 46.2631 30.9584 46.9219 30.6679 47.444C30.4561 47.8247 30.0366 48.0412 29.6036 47.9934V47.9934C24.8826 47.469 20.118 47.469 15.397 47.9934V47.9934C14.803 48.0588 14.2684 47.6303 14.203 47.0363C14.1553 46.6036 14.3717 46.1844 14.7521 45.9726L20.1173 42.9921L20.1173 42.9921C18.9546 37.9274 18.283 32.7623 18.1117 27.5687L1.48128 31.3483V31.3483C0.984334 31.4613 0.489896 31.15 0.376913 30.6531C0.36164 30.5859 0.353938 30.5172 0.353951 30.4483V26.9778V26.9779C0.353951 26.2788 0.748964 25.6397 1.37428 25.3271L9.58145 21.2235H9.5797C9.5797 19.2635 9.52894 17.5324 11.3693 17.5324C12.6476 17.5324 13.0347 18.3252 13.1555 19.4365L17.8926 17.0678C18.0218 1.53297 20.33 0 22.5002 0C24.6704 0 26.9789 1.53295 27.1078 17.0678L27.1078 17.0678Z"
			/>
		</motion.svg>
	);
};

const Rocket = props => {
	return (
		<motion.svg viewBox="0 0 27 48" style={{ ...props.style }}>
			<path
				onPointerUp={props.onTap}
				style={props.onTap ? { pointerEvents: "auto", cursor: "pointer" } : undefined}
				fillRule="evenodd"
				clipRule="evenodd"
				d="M20.3571 30.884V30.8851C20.3571 31.9716 20.1093 33.0439 19.6326 34.0203L18.9976 35.2902V35.2902C18.7797 35.7252 18.3348 35.9999 17.8483 36H9.15171V36C8.66476 36 8.21962 35.7248 8.00185 35.2893L7.36688 34.0192V34.0192C6.89031 33.0428 6.64269 31.9705 6.64285 30.884L1.74 35.7864V35.7864C1.48879 36.0373 1.08175 36.037 0.830858 35.7858C0.710442 35.6653 0.642821 35.5018 0.642853 35.3314V29.7327V29.7331C0.642853 28.8239 1.00395 27.9519 1.64676 27.3088L6.39155 22.5641V22.5641C6.55251 22.4033 6.64292 22.185 6.64286 21.9575V15.4286C6.64286 4.55511 10.9286 0 13.5 0C16.0714 0 20.3571 4.55511 20.3571 15.4286V21.9574V21.9573C20.3571 22.1846 20.4474 22.4026 20.6081 22.5634L25.353 27.3086V27.3086C25.9959 27.9515 26.3571 28.8235 26.3571 29.7327V35.332V35.332C26.3568 35.687 26.0688 35.9746 25.7137 35.9743C25.5436 35.9742 25.3804 35.9066 25.26 35.7863L20.3571 30.884ZM13.5 37.7143V37.7143C15.5113 37.8334 17.0455 39.5601 16.9271 41.5714C16.9271 44.0186 14.6272 48 13.5 48C12.3728 48 10.0727 44.0186 10.0727 41.5714V41.5714C9.95437 39.56 11.4886 37.8333 13.5 37.7143V37.7143Z"
			/>
		</motion.svg>
	);
};

const IconMap = {
	PersonMasculine: PersonMasculine,
	PersonFeminine: PersonFeminine,
	Child: Child,
	Baby: Baby,
	Heart: Heart,
	Star: Star,
	Fire: Fire,
	Water: Water,
	EmojiHappy: EmojiHappy,
	EmojiDisappointed: EmojiDisappointed,
	ThumbsUp: ThumbsUp,
	ThumbsDown: ThumbsDown,
	Bicycle: Bicycle,
	Car: Car,
	Airplane: Airplane,
	Rocket: Rocket,
};

export const pictogramIcons = [
	"Heart",
	"Star",
	"Fire",
	"Water",
	"EmojiHappy",
	"EmojiDisappointed",
	"ThumbsUp",
	"ThumbsDown",
	"Bicycle",
	"Car",
	"Airplane",
	"Rocket",
	"PersonMasculine",
	"PersonFeminine",
	"Child",
	//"Baby",
];
